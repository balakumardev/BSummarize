name: Build and Release Firefox Extension

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zip

      - name: Read extension version
        id: extension_version
        run: |
          version=$(grep -oP '"version"\s*:\s*"\K[^"]+' manifest.json)
          echo "current_version=$version" >> $GITHUB_OUTPUT

      - name: Package extension
        run: |
          zip -r extension.zip * -x ".git/*" ".github/*"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.extension_version.outputs.current_version }}
          release_name: Release v${{ steps.extension_version.outputs.current_version }}
          draft: false
          prerelease: false

      - name: Upload extension to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./extension.zip
          asset_name: extension-v${{ steps.extension_version.outputs.current_version }}.zip
          asset_content_type: application/zip

      - name: Update manifest version
        run: |
          current_version=${{ steps.extension_version.outputs.current_version }}
          major=$(echo $current_version | cut -d '.' -f 1)
          minor=$(echo $current_version | cut -d '.' -f 2)
          patch=$(echo $current_version | cut -d '.' -f 3)
          next_patch=$((patch + 1))
          next_version="$major.$minor.$next_patch"
          sed -i "s/\"version\": \"$current_version\"/\"version\": \"$next_version\"/" manifest.json

      - name: Commit updated manifest
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Update manifest version to ${{ steps.extension_version.outputs.current_version }}'
          add: 'manifest.json'
